apply from: "https://gradle.avaldigitallabs.com/resources/java-serenity-project.gradle"
repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven {
        url 'https://gitlab.com/api/v4/projects/28985927/packages/maven'
    }
}

ext {

    libs = [
            test: [
                    serenity     : [
                            core               : "net.serenity-bdd:serenity-core:${serenityVersion}",
                            junit              : "net.serenity-bdd:serenity-junit:${serenityVersion}",
                            ensure             : "net.serenity-bdd:serenity-ensure:${serenityEnsureVersion}",
                            screenplay         : "net.serenity-bdd:serenity-screenplay:${serenityVersion}",
                            screenplayWebdriver: "net.serenity-bdd:serenity-screenplay-webdriver:${serenityVersion}",
                            cucumber4          : "net.serenity-bdd:serenity-cucumber4:${serenityCucumberVersion}",
                            restAssured        : "net.serenity-bdd:serenity-rest-assured:${serenityVersion}",
                            rest               : "net.serenity-bdd:serenity-screenplay-rest:${serenityVersion}"
                    ],
                    cucumber     : [
                            core : "io.cucumber:cucumber-java:${cucumberVersion}",
                            junit: "io.cucumber:cucumber-junit:${cucumberVersion}"
                    ],
                    junit        : "junit:junit:${junitVersion}",
                    assertj      : "org.assertj:assertj-core:${assertJVersion}",
                    hamcrest     : "org.hamcrest:hamcrest-all:${hamcrestVersion}",
                    lombok       : "org.projectlombok:lombok:${lombokVersion}",
                    aeonbits     : "org.aeonbits.owner:owner-java8:${aeonBitsVersion}",
                    jsonvalidator: "io.rest-assured:json-schema-validator:${jsonvalidatorrestassured}",
                    gherkin      : "io.cucumber:jgherkin:${jsonvalidatorrestassured}",
                    faker        : "com.github.javafaker:javafaker:${fakerVersion}",
                    testrail     : "com.peterland:cucumber-with-testrail:${peterlandTestrailVersion}"

            ]
    ]
    runner = [
            projectRootPath: new File("").absolutePath,
            buildProfile   : System.getProperty('environment'),
            cucumberOptions: '',
            reportName     : 'Reporte de Pruebas'
    ]
}
dependencies {
    compile files('libs/ojdbc8.jar')

    annotationProcessor libs.test.lombok
    compile group: 'com.github.javafaker', name: 'javafaker', version: '0.16'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'

    implementation libs.test.serenity.core,
            libs.test.serenity.screenplay,
            libs.test.serenity.junit,
            libs.test.serenity.ensure,
            libs.test.serenity.cucumber4,
            libs.test.serenity.rest,
            libs.test.junit,
            libs.test.cucumber.core,
            libs.test.cucumber.junit,
            libs.test.lombok,
            libs.test.aeonbits,
            libs.test.jsonvalidator
    implementation("com.peterland:cucumber-with-testrail:${peterlandTestrailVersion}", {
        exclude group: 'net.serenity-bdd', module: 'serenity-core'
        exclude group: 'net.serenity-bdd', module: 'serenity-screenplay'
        exclude group: 'net.serenity-bdd', module: 'serenity-screenplay-rest'
    })
}

tasks.withType(Test) {
    systemProperties System.getProperties()
    systemProperties['user.dir'] = workingDir
    systemProperties['testrail.enable'] = "${testrailEnable}"
    systemProperties['testrail.evidences.enable'] = "${testrailEvidencesEnable}"
    systemProperties['testrail.results.enable'] = "${testrailResultsEnable}"
    systemProperties['testrail.url'] = "${testrailUrl}"
    systemProperties['testrail.user'] = "${testrailUser}"
    systemProperties['testrail.password'] = "${testrailPassword}"
    systemProperties['testrail.testRunId'] = "${testrailTestRunId}"
    systemProperties['testrail.projectId'] = "${testrailProjectId}"
    systemProperties['testrail.suiteId'] = "${testrailSuiteId}"
    systemProperties['testrail.attachments'] = "${testrailAttachments}"
}

processTestResources {
    if (String.valueOf(runner.projectRootPath).contains('bavv-pasivoavvillas-qa-front')) {
        if (runner.buildProfile == 'stg')
            runner.buildProfile = "${uiEnvironment}"
        runner.cucumberOptions = "${uiCucumberOptions}"
    } else {
        if (runner.buildProfile == 'stg')
            runner.buildProfile = "${apiEnvironment}"
        runner.cucumberOptions = "${apiCucumberOptions}"
    }
    if (runner.buildProfile == 'pro')
        runner.cucumberOptions = "--tags '@layer:backend and @smoke-test and @execution:automatic and not @bug-type:known-issue and not @ignore'"
    println "               ╔══╗ \n" +
            "               ║██║ \n" +
            "               ║(O)║♫ ♪ ♫ ♪\n" +
            "               ╚══╝\n" +
            "               ▄ █ ▄ █ ▄ ▄ █ ▄ █ ▄ █\n" +
            "               Min- - - - - - - - - - - -●Max\n"
    println "[INFO:PBA] RUNNING 🇦​​​​​🇩​​​​​🇳​​​​​ 🇦​​​​​🇺​​​​​🇹​​​​​🇴​​​​​🇲​​​​​🇦​​​​​🇹​​​​​🇮​​​​​🇴​​​​​🇳​​​​​ 🇵​​​​​🇷​​​​​🇴​​​​​🇯​​​​​🇪​​​​​🇨​​​​​🇹​​​​​"
    println "[INFO:PBA] PROJECT PATH: $runner.projectRootPath"
    println "[INFO:PBA] ENVIRONMENT: $runner.buildProfile"
    println "[INFO:PBA] TESTRAIL: " + System.getProperty("testrail.enable")
    println "[INFO:PBA] CUCUMBER OPTIONS: $runner.cucumberOptions"
    from("$rootDir/profiles/$runner.buildProfile") {
        include '*.properties'
    }
    from("$rootDir/src/test/java") {
        include '**/*.feature'
    }
}
test {
    testLogging {
        events "failed", "passed", "skipped"
        exceptionFormat = 'full'
    }
    filter {
        includeTestsMatching "co.com.avvillaspasivos.common.AcceptanceTestSuite"
    }
    systemProperty "environment", runner.buildProfile
    environment("cucumber.options", runner.cucumberOptions)
    test.outputs.upToDateWhen { false }
    gradle.startParameter.continueOnFailure = true
}
